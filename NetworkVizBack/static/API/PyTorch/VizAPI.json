[
  {
    "node": "ImageTensor",
    "type": "input",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Loader for single image",
    "parameters": [
      {
        "ParaName": "image_path",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      },
      {
        "ParaName": "imsize",
        "ParaClass": "int",
        "ParaValue": 512,
        "Required": 0
      }
    ]
  },
  {
    "node": "RandomTensor",
    "type": "input",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Loader for random tensor",
    "parameters": [
      {
        "ParaName": "view",
        "ParaClass": "list",
        "ParaValue": "[]",
        "Required": 1
      }
    ]
  },
  {
    "node": "ConstantTensor",
    "type": "input",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Loader for constant tensor (1, 0)",
    "parameters": [
      {
        "ParaName": "view",
        "ParaClass": "list",
        "ParaValue": "[]",
        "Required": 1
      },
      {
        "ParaName": "value",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      }
    ]
  },
  {
    "node": "SavedTensor",
    "type": "input",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Loader for tensor",
    "parameters": [
      {
        "ParaName": "tensor_path",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      }
    ]
  },
  {
    "node": "MNIST",
    "type": "input",
    "api": "PyTorch",
    "ports": [
      3,
      4,
      5
    ],
    "source": "",
    "description": "Loader for MNIST dataset",
    "parameters": [
      {
        "ParaName": "root",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      },
      {
        "ParaName": "max_batch_size",
        "ParaClass": "int",
        "ParaValue": 1,
        "Required": 0
      },
      {
        "ParaName": "shuffle",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      },
      {
        "ParaName": "train",
        "ParaClass": "bool",
        "ParaValue": true,
        "Required": 0
      },
      {
        "ParaName": "download",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "ImageTensor",
    "type": "constant",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Loader for single image",
    "parameters": [
      {
        "ParaName": "image_path",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      },
      {
        "ParaName": "imsize",
        "ParaClass": "int",
        "ParaValue": 512,
        "Required": 0
      }
    ]
  },
  {
    "node": "RandomTensor",
    "type": "constant",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Random tensor constant",
    "parameters": [
      {
        "ParaName": "view",
        "ParaClass": "list",
        "ParaValue": "[]",
        "Required": 1
      }
    ]
  },
  {
    "node": "ConstantTensor",
    "type": "constant",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Constant tensor constant (1, 0)",
    "parameters": [
      {
        "ParaName": "view",
        "ParaClass": "list",
        "ParaValue": "[]",
        "Required": 1
      },
      {
        "ParaName": "value",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      }
    ]
  },
  {
    "node": "SavedTensor",
    "type": "constant",
    "api": "PyTorch",
    "ports": [
      3,
      4
    ],
    "source": "",
    "description": "Constant Tensor constant",
    "parameters": [
      {
        "ParaName": "tensor_path",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      }
    ]
  },
  {
    "node": "ReLU",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      3,
      4
    ],
    "source": "",
    "description": "ReLu Layer",
    "parameters": []
  },
  {
    "node": "Linear",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      3,
      4
    ],
    "source": "",
    "description": "Linear Layer",
    "parameters": [
      {
        "ParaName": "in_features",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "out_features",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      },
      {
        "ParaName": "bias",
        "ParaClass": "bool",
        "ParaValue": true,
        "Required": 0
      }
    ]
  },
  {
    "node": "Conv2D",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      3,
      4
    ],
    "source": "",
    "description": "Conv2d Layer",
    "parameters": [
      {
        "ParaName": "in_channels",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "out_channels",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "kernel_size",
        "ParaClass": "tuple",
        "ParaValue": "()",
        "Required": 1
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      },
      {
        "ParaName": "stride",
        "ParaClass": "tuple",
        "ParaValue": [
          1,
          1
        ],
        "Required": 0
      },
      {
        "ParaName": "padding",
        "ParaClass": "tuple",
        "ParaValue": [
          0,
          0
        ],
        "Required": 0
      },
      {
        "ParaName": "dilation",
        "ParaClass": "tuple",
        "ParaValue": [
          1,
          1
        ],
        "Required": 0
      },
      {
        "ParaName": "groups",
        "ParaClass": "int",
        "ParaValue": 1,
        "Required": 0
      },
      {
        "ParaName": "bias",
        "ParaClass": "bool",
        "ParaValue": true,
        "Required": 0
      },
      {
        "ParaName": "padding_mode",
        "ParaClass": "str",
        "ParaValue": "zeros",
        "Required": 0
      }
    ]
  },
  {
    "node": "MaxPool2D",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      3,
      4
    ],
    "source": "",
    "description": "MaxPool2d Layer",
    "parameters": [
      {
        "ParaName": "kernel_size",
        "ParaClass": "tuple",
        "ParaValue": "()",
        "Required": 1
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      },
      {
        "ParaName": "stride",
        "ParaClass": "tuple",
        "ParaValue": null,
        "Required": 0
      },
      {
        "ParaName": "padding",
        "ParaClass": "tuple",
        "ParaValue": [
          0,
          0
        ],
        "Required": 0
      },
      {
        "ParaName": "dilation",
        "ParaClass": "tuple",
        "ParaValue": [
          1,
          1
        ],
        "Required": 0
      },
      {
        "ParaName": "return_indices",
        "ParaClass": "_empty",
        "ParaValue": false,
        "Required": 0
      },
      {
        "ParaName": "ceil_mode",
        "ParaClass": "_empty",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "BatchNorm2D",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      3,
      4
    ],
    "source": "",
    "description": "Batch2dNorm Layer",
    "parameters": [
      {
        "ParaName": "num_features",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      },
      {
        "ParaName": "eps",
        "ParaClass": "float",
        "ParaValue": 1e-05,
        "Required": 0
      },
      {
        "ParaName": "momentum",
        "ParaClass": "float",
        "ParaValue": 0.1,
        "Required": 0
      },
      {
        "ParaName": "affine",
        "ParaClass": "bool",
        "ParaValue": true,
        "Required": 0
      },
      {
        "ParaName": "track_running_stats",
        "ParaClass": "bool",
        "ParaValue": true,
        "Required": 0
      }
    ]
  },
  {
    "node": "LogSoftMax",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      3,
      4
    ],
    "source": "",
    "description": "LogSoftMax Layer",
    "parameters": [
      {
        "ParaName": "dim",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "MSELoss",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      2,
      3,
      4
    ],
    "source": "",
    "description": "MSELoss Layer",
    "parameters": [
      {
        "ParaName": "reduction",
        "ParaClass": "str",
        "ParaValue": "mean",
        "Required": 0
      }
    ]
  },
  {
    "node": "NLLLoss",
    "type": "layer",
    "api": "PyTorch",
    "ports": [
      1,
      2,
      3,
      4
    ],
    "source": "",
    "description": "NLLLoss Layer",
    "parameters": [
      {
        "ParaName": "reduction",
        "ParaClass": "str",
        "ParaValue": "mean",
        "Required": 0
      }
    ]
  },
  {
    "node": "Flatten",
    "type": "transform",
    "api": "PyTorch",
    "ports": [
      1,
      4
    ],
    "source": "",
    "description": "Flat tensor to One",
    "parameters": [
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "Normalize",
    "type": "transform",
    "api": "PyTorch",
    "ports": [
      1,
      4
    ],
    "source": "",
    "description": "Normalize img tensor to certain range",
    "parameters": [
      {
        "ParaName": "mean",
        "ParaClass": "tuple",
        "ParaValue": [
          0.485,
          0.456,
          0.406
        ],
        "Required": 0
      },
      {
        "ParaName": "std",
        "ParaClass": "tuple",
        "ParaValue": [
          0.229,
          0.224,
          0.225
        ],
        "Required": 0
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "ClampData",
    "type": "transform",
    "api": "PyTorch",
    "ports": [
      1,
      4
    ],
    "source": "",
    "description": "Clamp tensor to certain range",
    "parameters": [
      {
        "ParaName": "clamp_range",
        "ParaClass": "tuple",
        "ParaValue": [
          0,
          1
        ],
        "Required": 0
      },
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "Detach",
    "type": "transform",
    "api": "PyTorch",
    "ports": [
      1,
      4
    ],
    "source": "",
    "description": "Detach tensor from computation graph. When use detach operation, it is safer to first clone the tensor and then use the inplace detach version",
    "parameters": [
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "Adder",
    "type": "transform",
    "api": "PyTorch",
    "ports": [
      1,
      4
    ],
    "source": "",
    "description": "Add multiple tensors",
    "parameters": [
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "GetGramMatrix",
    "type": "transform",
    "api": "PyTorch",
    "ports": [
      1,
      4
    ],
    "source": "",
    "description": "Get Gram Features (for image)",
    "parameters": [
      {
        "ParaName": "inplace_forward",
        "ParaClass": "bool",
        "ParaValue": false,
        "Required": 0
      }
    ]
  },
  {
    "node": "SGD",
    "type": "optimizer",
    "api": "PyTorch",
    "ports": [
      1,
      2
    ],
    "source": "",
    "description": "SGD Optimizer",
    "parameters": [
      {
        "ParaName": "learning_rate",
        "ParaClass": "float",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "momentum",
        "ParaClass": "float",
        "ParaValue": 0,
        "Required": 0
      }
    ]
  },
  {
    "node": "LBFGS",
    "type": "optimizer",
    "api": "PyTorch",
    "ports": [
      1,
      2
    ],
    "source": "",
    "description": "LBFGS Optimizer",
    "parameters": [
      {
        "ParaName": "learning_rate",
        "ParaClass": "float",
        "ParaValue": 1,
        "Required": 0
      }
    ]
  },
  {
    "node": "Saver",
    "type": "monitor",
    "api": "PyTorch",
    "ports": [
      1
    ],
    "source": "",
    "description": "Monitor for variable saver",
    "parameters": [
      {
        "ParaName": "model_save_path",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      }
    ]
  },
  {
    "node": "Manager",
    "type": "monitor",
    "api": "PyTorch",
    "ports": [],
    "source": "",
    "description": "Monitor for model",
    "parameters": [
      {
        "ParaName": "epochs",
        "ParaClass": "int",
        "ParaValue": -1,
        "Required": 1
      },
      {
        "ParaName": "model_save_path",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      },
      {
        "ParaName": "device_name",
        "ParaClass": "str",
        "ParaValue": "",
        "Required": 1
      }
    ]
  }
]